# Copyright (C) 2023  Christian Berger
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

image: docker:26.0.1

# Details about how to connect to the Docker service to run this build.
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

services:
  - name: docker:26.0.1

stages:
  - build
  - test-coverage
  - deploy

# Display information before we start the build.
before_script:
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx create --name platformbuilder --use
  - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx inspect --bootstrap

# This section describes what shall be done to build and test the project.
build-and-test:
  rules:
    - if: $CI_COMMIT_TAG == null
  tags:
    - docker-build
  stage: build
  script:
    - docker buildx build --platform "linux/amd64,linux/arm/v7" ./opencv-service

test-coverage:
  needs: []
  rules:
    - if: $CI_COMMIT_TAG == null
  tags:
    - docker-build
  stage: test-coverage
  script:
    - docker build ./opencv-service --output . --target copytohost
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ./coverage.xml

# This section describes what shall be done to deploy artefacts from the project.
release:
  rules: # REGEX generated with help of codellama, see /llm-dialogues/regex.txt
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/'
  when: on_success
  tags:
    - docker-build
  stage: deploy
  script:
    - docker buildx build --platform "linux/amd64,linux/arm/v7,linux/arm64" --push -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" ./opencv-service
